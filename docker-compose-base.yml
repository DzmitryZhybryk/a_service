version: '3.9'
services:

  authentication:
    build:
      context: .
      args:
        - INSTALL_COMMAND=i-dev
    container_name: authentication
    ports:
      - "8001:8001"
    env_file:
      - .env
    volumes:
      - ./app/:/code/app
      - ./app/logs:/code/logs
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - api-celery
    tty: true

  api-celery:
    build:
      context: .
    container_name: celery
    command: pdm run celery -A app.api.tasks worker --loglevel=INFO
    env_file:
      - .env
    depends_on:
      - rabbitmq
    tty: true

  postgres:
    image: postgres:15.3
    container_name: postgres
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      #      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres-db:/var/lib/postgresql/data
    tty: true

  redis:
    image: redis:7.0.11
    container_name: redis
    ports:
      - '6379:6379'
    env_file:
      - .env
    volumes:
      - redis-cache:/data
    command: redis-server --requirepass 3050132596
    tty: true

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    hostname: rabbitmq
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    tty: true

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs:/etc/prometheus/
      - prom-data:/prometheus

  exporter:
    image: prom/node-exporter:latest
    container_name: exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    tty: true

  grafana:
    image: grafana/grafana:8.2.6
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_LOG_LEVEL=info
      - GF_SECURITY_ADMIN_USER=test
      - GF_SECURITY_ADMIN_PASSWORD=test
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-configs:/etc/grafana
    tty: true

volumes:
  postgres-db:
  prom-data:
  grafana-data:
  grafana-configs:
  redis-cache:
    driver: local